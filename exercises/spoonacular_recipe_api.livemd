# Spoonacular Recipe API

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:httpoison, "~> 1.8"},
  {:utils, path: "#{__DIR__}/../utils"},
  {:kino, "~> 0.8.0", override: true},
  {:poison, "~> 5.0.0"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Spoonacular Recipe API

[Spoonacular](https://spoonacular.com/) is a popular food API.

Create a free Spoonacular to get your API key. You can view your API key in the [Spoonacular Console](https://spoonacular.com/food-api/console#Dashboard).

### Browser Request

Use your API to visit the `https://api.spoonacular.com/recipes/complexSearch?apiKey=API_KEY` URL where API_KEY should be your API key from the console.

### HTTPoison Request

Use [HTTPoison](https://hexdocs.pm/httpoison/HTTPoison.html) to retrieve the same JSON data from the `https://api.spoonacular.com/recipes/complexSearch?apiKey=API_KEY` URL you visited in the browser. Then use [Poison](https://hexdocs.pm/poison/Poison.html) to decode the JSON response into an Elixir data structure.

```elixir
{:ok, response} =
  HTTPoison.get(
    "https://api.spoonacular.com/recipes/716429/information?apiKey=d3f17f2e56774d3098224877ffadb2b1&includeNutrition=true"
  )

Poison.decode(response.body)
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish spoonacular recipe api exercise"
```

## Up Next

| Previous                                               | Next                                           |
| ------------------------------------------------------ | ---------------------------------------------: |
| [Public Chat Api](../exercises/public_chat_api.livemd) | [Pokemon Api](../exercises/pokemon_api.livemd) |
