# Number Wordle

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Number Wordle

Wordle is a popular game where players get six attempts to guess a word.
They are given feedback clues to guess the word.

* **Green** if the letter is in the word and in the correct spot.
* **Yellow** if the letter is in the word but in the incorrect spot.
* **Gray** if the letter is not in the word.

For example for the word "TOAST" the guess "TARTS" would be

```mermaid
flowchart LR
style 1 fill:green
style 2 fill:gray
style 3 fill:gray
style 4 fill:yellow
style 5 fill:yellow

1[T] --- 2[A] --- 3[R] --- 4[T] --- 5[S]
```

You're going to create a wordle game but for numbers.

It should provide feedback for a guess and and answer.

<!-- livebook:{"force_markdown":true} -->

```elixir
NumberWordle.feedback(3689, 3598)
[:green, :gray, :yellow, :yellow]
```

Ensure you handle numbers with multiple of the same digit. For example,

<!-- livebook:{"force_markdown":true} -->

```elixir
NumberWordle.feedback(1113, 2221)
[:yellow, :gray, :gray, :gray]

NumberWordle.feedback(1113, 2211)
[:yellow, :gray, :green, :gray]

NumberWordle.feedback(1111, 2111)
[:gray, :green, :green, :green]
```

Enter your solution below.

```elixir
defmodule NumberWordle do
  def feedback(answer, guess) do
    # turn numbers into digits
    a_digits = digit(answer)
    g_digits = digit(guess)
    myzip = zip(a_digits, g_digits)
    map(myzip)
  end

  def digit(number) do
    Integer.digits(number)
  end

  def zip(a, b) do
    Enum.zip(a, b)
  end

  def map(pairs) do
    answerdigits = Enum.map(pairs, fn {a, _b} -> a end)

    Enum.map(pairs, fn {a, b} ->
      if a == b do
        :green
      else
        if b in answerdigits do
          :yellow
        else
          :gray
        end
      end
    end)
  end
end

NumberWordle.feedback(1234, 1345)
```

```elixir
defmodule NumberWordle do
  def feedback(answer, guess) do
    # turn numbers into digits
    a_digits = digit(answer)
    g_digits = digit(guess)
    # Enum.zip digits
    # Enum.map pair into color code
  end

  def digit(number) do
    Integer.digits(number)
  end

  def zip do
    Enum.zip(a, b)
  end
end

Utils.feedback(:number_wordle, NumberWordle)
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish number wordle exercise"
```

## Up Next

| Previous                                         | Next                                   |
| ------------------------------------------------ | -------------------------------------: |
| [Bingo Winner](../exercises/bingo_winner.livemd) | [Datetime](../reading/datetime.livemd) |
