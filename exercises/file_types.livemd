# File Types

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## File Types

Create a `FileTypes` module which can display the number of files of a given type in a folder.

For example, we have create a `file_types` folder with several files inside of it.

```elixir
File.ls!("../data/file_types")
```

Provided a folder, your `FileTypes` module should return the number of files by their extension.

<!-- livebook:{"force_markdown":true} -->

```elixir
[txt: 2, ex: 2, png: 1, jpg: 1] = FileTypes.find("data/file_types")
```

Enter your solution below.

```elixir
defmodule FileTypes do
  def find(folder) do
    {:ok, list} = File.ls(folder)

    list
    |> Enum.map(&String.split(&1, "."))
    |> Enum.map(&List.last/1)
    |> Enum.group_by(fn x -> x end)
    |> Enum.map(fn {key, value} -> {String.to_atom(key), Enum.count(value)} end)
    |> Enum.into(%{})
  end
end

FileTypes.find("../data/file_types")
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish file types exercise"
```

## Up Next

| Previous                                           | Next                                             |
| -------------------------------------------------- | -----------------------------------------------: |
| [Phone Parsing](../exercises/phone_parsing.livemd) | [Sign Up Form](../exercises/sign_up_form.livemd) |
