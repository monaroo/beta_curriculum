# File System Todo

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Overview

You're going to create a TodoList application with persistence using a file system.

The `TodoList` module should be able to:

`add/1` an item to our todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.add("go get groceries")
{:ok, ["go get groceries"]}
```

`list/1` the items in our todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.list()
["go get groceries"]
```

`complete/1` an item in our todo list. This should delete the item and return the remaining elements in the todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.complete("go get groceries")
{:ok, []}
```

If an item does not exist, it should return an error tuple.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.complete("non existing item")
{:error, :not_found}
```

Enter your solution in the Elixir cell below.

```elixir
defmodule TodoList do
  def add(item) do
    File.write("../data/todolist", "#{item}\n", [:append])
  end

  def complete(item) do
    {_complete_new, complete_newer} = File.read("../data/todolist")

    {_one, the_other} =
      File.open("../data/todolist", fn _item -> String.replace(complete_newer, "#{item}", "") end)

    File.write("../data/todolist", the_other)
  end

  def list do
    File.open("../data/todolist", [:read], fn file ->
      IO.read(file, :all)
    end)
  end
end

TodoList.list()
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish file system todo app exercise"
```

## Up Next

| Previous                                   | Next                                               |
| ------------------------------------------ | -------------------------------------------------: |
| [Save Game](../exercises/save_game.livemd) | [Phone Parsing](../exercises/phone_parsing.livemd) |
