# Rock Paper Scissors Pattern Matching

```elixir
Mix.install([
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"},
  {:tested_cell, github: "brooklinjazz/tested_cell"},
  {:utils, path: "#{__DIR__}/../utils"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Create Rock Paper Scissors Using Pattern Matching

You're going to recreate your rock paper scissors game using pattern matching.

In the Elixir cell below,

* Create a module `RockPaperScissors`
* Create a `play/2` function that expects `:rock`, `:paper`, or `:scissors` for each parameter.
* `play/2` should return `"#{guess} beats #{guess}!"` or `"draw!"` depending on the outcome.

<!-- livebook:{"force_markdown":true} -->

```elixir
RockPaperScissors.play(:rock, :paper)
":paper beats :rock!"

RockPaperScissors.play(:rock, :rock)
"draw!"
```

```elixir
defmodule RockPaperScissors do
  def play(guess1, guess2)
      when guess1 == :rock or guess1 == :paper or (guess1 == :scissors and guess2 == :rock) or
             guess2 == :paper or guess2 == :scissors do
    if beats?(guess1, guess2) do
      ":#{guess1} beats :#{guess2}!"
    else
      if draw?(guess1, guess2) do
        "draw!"
      else
        ":#{guess2} beats :#{guess1}!"
      end
    end
  end

  def beats?(guess1, guess2) do
    {guess1, guess2} in [
      {:rock, :scissors},
      {:paper, :rock},
      {:scissors, :paper}
    ]
  end

  def draw?(guess1, guess2) do
    {guess1, guess2} in [
      {:rock, :rock},
      {:paper, :paper},
      {:scissors, :scissors}
    ]
  end
end

Utils.feedback(:rock_paper_scissors_pattern_matching, RockPaperScissors)
```

## Commit Your Progress

Run the following in your command line from the project folder to track and save your progress in a Git commit.

```
$ git add .
$ git commit -m "finish rps pattern matching exercise"
```

## Up Next

| Previous                                                   | Next                                                       |
| ---------------------------------------------------------- | ---------------------------------------------------------: |
| [Treasure Matching](../exercises/treasure_matching.livemd) | [Metric Conversion](../exercises/metric_conversion.livemd) |
